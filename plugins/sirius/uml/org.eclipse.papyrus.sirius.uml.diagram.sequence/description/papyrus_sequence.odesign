<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/sequence/description/2.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/sequence/description/tool/2.0.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_2="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" documentation="Copyright (c) 2024 CEA LIST.&#xD;&#xA;&#xD;&#xA;This program and the accompanying materials&#xD;&#xA;are made available under the terms of the Eclipse Public License 2.0&#xD;&#xA;which accompanies this distribution, and is available at&#xD;&#xA;https://www.eclipse.org/legal/epl-2.0/&#xD;&#xA;&#xD;&#xA;SPDX-License-Identifier: EPL-2.0&#xD;&#xA;&#xD;&#xA; Contributors:&#xD;&#xA;  Obeo - Initial API and implementation" name="papyrus_sequence" version="12.0.0.2017041100">
  <ownedViewpoints name="SequenceDiagram" modelFileExtension="uml">
    <ownedRepresentations xsi:type="description_1:SequenceDiagramDescription" dropDescriptions="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='GraphicalCommentDrop'] //@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='GraphicalConstraintDrop']" documentation="Representation to edit sequence diagrams" name="SequenceDiagram" titleExpression="aql:self.name + ' Sequence Diagram'" domainClass="uml::PackageableElement" rootExpression="aql:self" enablePopupBars="true" endsOrdering="aql:self.getEndsOrdering(eventEnds)" instanceRolesOrdering="aql:self.getLifelineCandidates()">
      <metamodel href="platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#/"/>
      <defaultLayer name="Sequence">
        <nodeMappings xsi:type="description_1:InstanceRoleMapping" name="SD_Lifeline" deletionDescription="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='SD_Delete_All']" labelDirectEdit="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.5/@ownedTools[name='NamedElement_name_EditionTool']" semanticCandidatesExpression="aql:self.getLifelineCandidates()" synchronizationLock="true" domainClass="uml::Lifeline">
          <borderedNodeMappings xsi:type="description_1:ExecutionMapping" name="SD_Lifeline_Execution" deletionDescription="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='SD_Delete_All']" semanticCandidatesExpression="aql:self" semanticElements="var:self" synchronizationLock="true" domainClass="uml::Lifeline" startingEndFinderExpression="aql:self" finishingEndFinderExpression="aql:self">
            <borderedNodeMappings xsi:type="description_1:ExecutionMapping" name="SD_ExecutionSpecification" deletionDescription="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='SD_Delete_All']" semanticCandidatesExpression="aql:self.getExecutionSpecificationCandidates()" synchronizationLock="true" domainClass="uml::ExecutionSpecification" startingEndFinderExpression="aql:self.getStartingEnd()" finishingEndFinderExpression="aql:self.getFinishingEnd()">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" labelExpression="" labelPosition="node" resizeKind="NORTH_SOUTH" width="2" height="5" color="//@userColorsPalettes[name='SD_ColorPalette']/@entries[name='CustomBlue']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </borderedNodeMappings>
            <style xsi:type="style:SquareDescription" labelSize="9" labelExpression="" labelPosition="node" resizeKind="NSEW" width="1" height="40">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" labelPosition="node" resizeKind="NSEW" width="10" height="4">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="SD_Comment" preconditionExpression="aql:self.oclIsTypeOf(uml::Comment)" deletionDescription="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='SD_Delete_All']" labelDirectEdit="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.5/@ownedTools[name='Comment_body_EditionTool']" semanticCandidatesExpression="aql:self.ownedComment" domainClass="uml::Comment">
          <style xsi:type="style:NoteDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" labelAlignment="LEFT" sizeComputationExpression="9" labelPosition="node" resizeKind="NSEW" color="//@userColorsPalettes[name='SD_ColorPalette']/@entries[name='CommentColor']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="SD_Constraint" preconditionExpression="aql:self.oclIsTypeOf(uml::Constraint)" deletionDescription="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='SD_Delete_All']" labelDirectEdit="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.5/@ownedTools[name='NamedElement_name_EditionTool']" semanticCandidatesExpression="aql: if self.oclIsKindOf(uml::Namespace) then self.oclAsType(uml::Namespace).ownedRule else self.eAllContents() endif" domainClass="uml::Constraint">
          <style xsi:type="style:NoteDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" sizeComputationExpression="9" labelPosition="node" resizeKind="NSEW" color="//@userColorsPalettes[name='SD_ColorPalette']/@entries[name='ConstraintColor']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings xsi:type="description_1:BasicMessageMapping" name="SD_Message" deletionDescription="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='SD_Delete_All']" labelDirectEdit="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.5/@ownedTools[name='NamedElement_name_EditionTool']" semanticCandidatesExpression="aql:self.getMessageCandidates()" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Lifeline_Execution'] //@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Lifeline_Execution']/@borderedNodeMappings[name='SD_ExecutionSpecification']" targetMapping="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Lifeline_Execution'] //@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Lifeline_Execution']/@borderedNodeMappings[name='SD_ExecutionSpecification']" targetFinderExpression="aql:self.getTargets()" sourceFinderExpression="aql:self.getSource()" domainClass="uml::Message" useDomainElement="true" sendingEndFinderExpression="aql:self.getStartingEnd()" receivingEndFinderExpression="aql:self.getFinishingEnd()">
          <style targetArrow="InputFillClosedArrow">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="9" labelExpression="aql:self.renderMessageLabelSD(diagram)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.messageSort = uml::MessageSort::reply">
            <style lineStyle="dash">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="9" labelExpression="aql:self.renderMessageLabelSD(diagram)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.messageSort = uml::MessageSort::asynchCall">
            <style>
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="9" labelExpression="aql:self.renderMessageLabelSD(diagram)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings xsi:type="description_1:CombinedFragmentMapping" name="SD_CombinedFragment" deletionDescription="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='SD_Delete_All']" semanticCandidatesExpression="aql:self.getCombinedFragmentCandidates()" synchronizationLock="true" domainClass="uml::CombinedFragment" startingEndFinderExpression="aql:self.getStartingEnd()" finishingEndFinderExpression="aql:self.getFinishingEnd()" coveredLifelinesExpression="aql:self.covered">
          <subContainerMappings xsi:type="description_1:OperandMapping" name="SD_InteractionOperand" semanticCandidatesExpression="aql:self.getInteractionOperandCandidates()" synchronizationLock="true" domainClass="uml::InteractionOperand" dropDescriptions="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='GraphicalCommentDrop'] //@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='GraphicalConstraintDrop']" reusedNodeMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Comment'] //@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Constraint']" startingEndFinderExpression="aql:self.getStartingEnd()" finishingEndFinderExpression="aql:self.getFinishingEnd()">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" labelAlignment="LEFT">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <containerMappings xsi:type="description_1:InteractionUseMapping" name="SD_InteractionUse" deletionDescription="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='SD_Delete_All']" semanticCandidatesExpression="aql:self.getInteractionUseCandidates()" synchronizationLock="true" domainClass="uml::InteractionUse" startingEndFinderExpression="aql:self.getStartingEnd()" finishingEndFinderExpression="aql:self.getFinishingEnd()" coveredLifelinesExpression="aql:self.covered" centerLabelExpression="aql:self.renderReferredInteractionLabelSD()">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" labelAlignment="LEFT">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections name="Nodes">
          <ownedTools xsi:type="tool:InstanceRoleCreationTool" name="CreateLifelineTool" label="Lifeline" precondition="aql:container.oclIsKindOf(uml::Interaction)" nodeMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Lifeline'] //@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Lifeline_Execution']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createLifeline(containerView, predecessor)"/>
            </initialOperation>
            <predecessor name="predecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ExecutionCreationTool" documentation="Create an Action Execution Specification" name="CreateActionExecutionSpecificationTool" label="Action Execution Specification" precondition="aql:container.oclIsTypeOf(uml::Lifeline)" nodeMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Lifeline_Execution']/@borderedNodeMappings[name='SD_ExecutionSpecification']" iconPath="/org.eclipse.uml2.uml.edit/icons/full/obj16/ActionExecutionSpecification.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.getOwningInteraction()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::ExecutionOccurrenceSpecification" referenceName="fragment" variableName="newStartExecutionOccurrenceSpecification"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::ActionExecutionSpecification" referenceName="fragment" variableName="newActionExecutionSpecification"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::ExecutionOccurrenceSpecification" referenceName="fragment" variableName="newFinishExecutionOccurrenceSpecification"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newActionExecutionSpecification.initializeExecutionSpecification(newStartExecutionOccurrenceSpecification, newFinishExecutionOccurrenceSpecification, startingEndPredecessor, finishingEndPredecessor, container)"/>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ExecutionCreationTool" documentation="Create a Behavior Execution Specification" name="CreateBehaviorExecutionSpecificationTool" label="Behavior Execution Specification" precondition="aql:container.oclIsTypeOf(uml::Lifeline)" nodeMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Lifeline_Execution']/@borderedNodeMappings[name='SD_ExecutionSpecification']" iconPath="/org.eclipse.uml2.uml.edit/icons/full/obj16/BehaviorExecutionSpecification.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.getOwningInteraction()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::ExecutionOccurrenceSpecification" referenceName="fragment" variableName="newStartExecutionOccurrenceSpecification"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::BehaviorExecutionSpecification" referenceName="fragment" variableName="newBehaviorExecutionSpecification"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::ExecutionOccurrenceSpecification" referenceName="fragment" variableName="newFinishExecutionOccurrenceSpecification"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newBehaviorExecutionSpecification.initializeExecutionSpecification(newStartExecutionOccurrenceSpecification, newFinishExecutionOccurrenceSpecification, startingEndPredecessor, finishingEndPredecessor, container)"/>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool:InteractionUseCreationTool" name="CreateInteractionUseTool" label="Interaction Use" containerMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@containerMappings[name='SD_InteractionUse']">
            <variable name="variable"/>
            <viewVariable name="viewVariable"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:variable.getOwningInteraction()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::InteractionUse" referenceName="fragment" variableName="newInteractionUse"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newInteractionUse.initializeInteractionUse(startingEndPredecessor, finishingEndPredecessor, coveredLifelines)"/>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
            <coveredLifelines name="coveredLifelines"/>
          </ownedTools>
          <ownedTools xsi:type="tool:CombinedFragmentCreationTool" name="CreateCombinedFragmentTool" label="Combined Fragment" containerMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@containerMappings[name='SD_CombinedFragment']">
            <variable name="variable"/>
            <viewVariable name="viewVariable"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:variable.getOwningInteraction()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::CombinedFragment" referenceName="fragment" variableName="newCombinedFragment">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newCombinedFragment">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::InteractionOperand" referenceName="operand" variableName="newInteractionOperand"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newCombinedFragment.initializeCombinedFragment(newInteractionOperand, startingEndPredecessor, finishingEndPredecessor, coveredLifelines)"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
            <coveredLifelines name="coveredLifelines"/>
          </ownedTools>
          <ownedTools xsi:type="tool:OperandCreationTool" name="CreateInteractionOperandTool" label="Interaction Operand" containerMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@containerMappings[name='SD_CombinedFragment']/@subContainerMappings[name='SD_InteractionOperand']">
            <variable name="variable"/>
            <viewVariable name="viewVariable"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::InteractionOperand" referenceName="operand" variableName="newInteractionOperand">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newInteractionOperand.initializeInteractionOperand(startingEndPredecessor, finishingEndPredecessor, variable)"/>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_2:NodeCreationDescription" name="CreateCommentTool" label="Comment" precondition="aql:container.canCreateSD(uml::Comment,'ownedComment')" nodeMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Comment']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createElement('uml::Comment','ownedComment',containerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_2:NodeCreationDescription" name="CreateConstraintTool" label="Constraint" precondition="aql:container.canCreateSD(uml::Constraint,'ownedRule')" nodeMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Constraint']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createElement('uml::Constraint','ownedRule',containerView)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Edges">
          <ownedTools xsi:type="tool:MessageCreationTool" name="CreateMessageSyncTool" label="Message Sync" precondition="aql:preSource.canCreateDomainBasedEdge(preTarget, 'Message', 'messages', preSourceView, preTargetView)" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@edgeMappings[name='SD_Message']" iconPath="/org.eclipse.uml2.uml.edit/icons/full/obj16/Message_synchCall.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:target.getOwningInteraction()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::MessageOccurrenceSpecification" referenceName="fragment" variableName="newSendEventMessageOccurrenceSpecification"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::MessageOccurrenceSpecification" referenceName="fragment" variableName="newReceiveEventMessageOccurrenceSpecification"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::Message" referenceName="message" variableName="newMessage"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newMessage.initializeMessage(uml::MessageSort::synchCall, newSendEventMessageOccurrenceSpecification, newReceiveEventMessageOccurrenceSpecification, source, target, startingEndPredecessor, finishingEndPredecessor)"/>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool:MessageCreationTool" name="CreateMessageAsyncTool" label="Message Async" precondition="aql:preSource.canCreateDomainBasedEdge(preTarget, 'Message', 'messages', preSourceView, preTargetView)" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@edgeMappings[name='SD_Message']" iconPath="/org.eclipse.uml2.uml.edit/icons/full/obj16/Message_asynchCall.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:target.getOwningInteraction()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::MessageOccurrenceSpecification" referenceName="fragment" variableName="newSendEventMessageOccurrenceSpecification"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::MessageOccurrenceSpecification" referenceName="fragment" variableName="newReceiveEventMessageOccurrenceSpecification"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::Message" referenceName="message" variableName="newMessage"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newMessage.initializeMessage(uml::MessageSort::asynchCall, newSendEventMessageOccurrenceSpecification, newReceiveEventMessageOccurrenceSpecification, source, target, startingEndPredecessor, finishingEndPredecessor)"/>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool:MessageCreationTool" name="CreateMessageReplyTool" label="Message Reply" precondition="aql:preSource.canCreateDomainBasedEdge(preTarget, 'Message', 'messages', preSourceView, preTargetView)" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@edgeMappings[name='SD_Message']" iconPath="/org.eclipse.uml2.uml.edit/icons/full/obj16/Message_reply.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:target.getOwningInteraction()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::MessageOccurrenceSpecification" referenceName="fragment" variableName="newSendEventMessageOccurrenceSpecification"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::MessageOccurrenceSpecification" referenceName="fragment" variableName="newReceiveEventMessageOccurrenceSpecification"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="uml::Message" referenceName="message" variableName="newMessage"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newMessage.initializeMessage(uml::MessageSort::reply, newSendEventMessageOccurrenceSpecification, newReceiveEventMessageOccurrenceSpecification, source, target, startingEndPredecessor, finishingEndPredecessor)"/>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
        </toolSections>
        <toolSections name="DeleteAction">
          <ownedTools xsi:type="tool_2:DeleteElementDescription" name="SD_Delete_All">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.deleteSD()"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Reorder">
          <ownedTools xsi:type="tool:ReorderTool" name="SD_ReorderInteractionFragment" mappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Lifeline']/@borderedNodeMappings[name='SD_Lifeline_Execution']/@borderedNodeMappings[name='SD_ExecutionSpecification'] //@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@containerMappings[name='SD_CombinedFragment'] //@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@edgeMappings[name='SD_Message'] //@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@containerMappings[name='SD_CombinedFragment']/@subContainerMappings[name='SD_InteractionOperand'] //@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@containerMappings[name='SD_InteractionUse']">
            <startingEndPredecessorBefore name="startingEndPredecessorBefore"/>
            <startingEndPredecessorAfter name="startingEndPredecessorAfter"/>
            <finishingEndPredecessorBefore name="finishingEndPredecessorBefore"/>
            <finishingEndPredecessorAfter name="finishingEndPredecessorAfter"/>
            <onEventMovedOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.graphicalReorderElement(startingEndPredecessorAfter, finishingEndPredecessorAfter)"/>
            </onEventMovedOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:InstanceRoleReorderTool" name="SD_ReorderLifeline" mappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Lifeline']">
            <predecessorBefore name="predecessorBefore"/>
            <predecessorAfter name="predecessorAfter"/>
            <instanceRoleMoved>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().graphicalReorderLifeline(self, predecessorAfter)"/>
            </instanceRoleMoved>
          </ownedTools>
        </toolSections>
        <toolSections name="GraphicalDrop">
          <ownedTools xsi:type="tool_2:ContainerDropDescription" name="GraphicalCommentDrop" precondition="aql:self.oclIsTypeOf(uml::Comment) and self.canDragAndDropGraphicSD(newContainer)" mappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Comment']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.dragAndDropGraphicSD(oldSemanticContainer,newSemanticContainer,newContainerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_2:ContainerDropDescription" name="GraphicalConstraintDrop" precondition="aql:self.oclIsTypeOf(uml::Constraint) and self.canDragAndDropGraphicSD(newContainer)" mappings="//@ownedViewpoints[name='SequenceDiagram']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='SD_Constraint']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.dragAndDropGraphicSD(oldSemanticContainer,newSemanticContainer,newContainerView)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="F2_Edition">
          <ownedTools xsi:type="tool_2:DirectEditLabel" name="NamedElement_name_EditionTool" precondition="aql:self.oclIsKindOf(uml::NamedElement)" inputLabelExpression="aql:self.getDirectEditInputValue()">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.consumeNewLabel(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_2:DirectEditLabel" name="Comment_body_EditionTool" label="Comment_body" precondition="aql:self.oclIsKindOf(uml::Comment)" inputLabelExpression="aql:self.oclAsType(uml::Element).getDirectEditInputValue()">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(uml::Element).consumeNewLabel(arg0)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.CommonDiagramServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.DeleteServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.DomainBasedEdgeServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.SemanticCandidatesServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.sequence.services.SequenceDiagramDropBehaviorProvider"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.sequence.services.SequenceDiagramOrderServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.sequence.services.SequenceDiagramSemanticCandidatesServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.sequence.services.SequenceDiagramServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.sequence.services.SequenceDiagramUMLLabelServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.UMLLabelServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="SD_ColorPalette">
    <entries xsi:type="description:UserFixedColor" red="195" green="215" blue="221" name="CustomBlue"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="204" name="CommentColor"/>
    <entries xsi:type="description:UserFixedColor" red="200" green="255" blue="230" name="ConstraintColor"/>
  </userColorsPalettes>
</description:Group>
