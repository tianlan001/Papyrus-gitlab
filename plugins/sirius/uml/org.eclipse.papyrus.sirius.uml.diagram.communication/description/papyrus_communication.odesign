<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" documentation="Copyright (c) 2023 CEA LIST, Obeo.&#xD;&#xA;&#xD;&#xA;All rights reserved. This program and the accompanying materials&#xD;&#xA;are made available under the terms of the Eclipse Public License 2.0&#xD;&#xA;which accompanies this distribution, and is available at&#xD;&#xA;https://www.eclipse.org/legal/epl-2.0/&#xD;&#xA;&#xD;&#xA;SPDX-License-Identifier: EPL-2.0&#xD;&#xA;&#xD;&#xA;Contributors:&#xD;&#xA;     Obeo - initial API and implementation" name="papyrus_communication" version="12.0.0.2017041100">
  <ownedViewpoints name="CommunicationDiagram" modelFileExtension="uml">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticMessageDrop']" documentation="Representation to edit Communication diagrams" name="CommunicationDiagram" titleExpression="aql:self.oclAsType(uml::NamedElement).name +' Communication Diagram'" domainClass="uml::NamedElement" rootExpression="var:self" enablePopupBars="true">
      <metamodel href="http://www.eclipse.org/uml2/5.0.0/UML#/"/>
      <defaultLayer name="Communication">
        <nodeMappings name="COD_Comment" preconditionExpression="aql:self.oclIsTypeOf(uml::Comment) and not(containerView.oclIsKindOf(viewpoint::DRepresentation))" deletionDescription="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='COD_Delete_All']" labelDirectEdit="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Comment_body_EditionTool']" semanticCandidatesExpression="aql:self.ownedComment" domainClass="uml::Comment" dropDescriptions="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticMessageDrop']">
          <style xsi:type="style:NoteDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" labelAlignment="LEFT" sizeComputationExpression="9" labelPosition="node" resizeKind="NSEW" color="//@userColorsPalettes[name='COD_ColorPalette']/@entries[name='CommentColor']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="COD_Constraint" preconditionExpression="aql:self.oclIsTypeOf(uml::Constraint) and not(containerView.oclIsKindOf(viewpoint::DRepresentation))" deletionDescription="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='COD_Delete_All']" labelDirectEdit="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.6/@ownedTools[name='NamedElement_name_EditionTool']" semanticCandidatesExpression="aql: if self.oclIsKindOf(uml::Namespace) then self.oclAsType(uml::Namespace).ownedRule else self.eAllContents() endif" domainClass="uml::Constraint" dropDescriptions="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticMessageDrop']">
          <style xsi:type="style:NoteDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" sizeComputationExpression="9" labelPosition="node" resizeKind="NSEW" color="//@userColorsPalettes[name='COD_ColorPalette']/@entries[name='ConstraintColor']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="COD_DurationObservation" preconditionExpression="aql:self.oclIsTypeOf(uml::DurationObservation) and not(containerView.oclIsKindOf(viewpoint::DRepresentation))" deletionDescription="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='COD_Delete_All']" labelDirectEdit="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.6/@ownedTools[name='NamedElement_name_EditionTool']" semanticCandidatesExpression="aql:if self.oclIsKindOf(uml::Interaction) then self.oclAsType(uml::Interaction).getObservationCandidates()->filter(uml::DurationObservation) else Sequence{} endif" domainClass="uml::DurationObservation" dropDescriptions="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticMessageDrop']">
          <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" sizeComputationExpression="2" resizeKind="NSEW" workspacePath="/org.eclipse.papyrus.sirius.uml.diagram.communication/icons/DurationObservation.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="COD_Lifeline" preconditionExpression="aql:self.oclIsTypeOf(uml::Lifeline) and not(containerView.oclIsKindOf(viewpoint::DRepresentation))" deletionDescription="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='COD_Delete_All']" labelDirectEdit="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.6/@ownedTools[name='NamedElement_name_EditionTool']" semanticCandidatesExpression="aql:if self.oclIsKindOf(uml::Interaction) then self.oclAsType(uml::Interaction).lifeline else Sequence{} endif" domainClass="uml::Lifeline" dropDescriptions="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticPropertyDrop'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticTypeDrop'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticMessageDrop']">
          <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" labelPosition="node" resizeKind="NSEW" width="10" height="2" color="//@userColorsPalettes[name='COD_ColorPalette']/@entries[name='CustomBlue']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="COD_TimeObservation" preconditionExpression="aql:self.oclIsTypeOf(uml::TimeObservation) and not(containerView.oclIsKindOf(viewpoint::DRepresentation))" deletionDescription="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='COD_Delete_All']" labelDirectEdit="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.6/@ownedTools[name='NamedElement_name_EditionTool']" semanticCandidatesExpression="aql:if self.oclIsKindOf(uml::Interaction) then self.oclAsType(uml::Interaction).getObservationCandidates()->filter(uml::TimeObservation) else Sequence{} endif" domainClass="uml::TimeObservation" dropDescriptions="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticMessageDrop']">
          <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" sizeComputationExpression="2" resizeKind="NSEW" workspacePath="/org.eclipse.papyrus.sirius.uml.diagram.communication/icons/TimeObservation.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="COD_Link" preconditionExpression="aql:not(sourceView.isCompartmentView()) and not(targetView.isCompartmentView())" deletionDescription="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='COD_Delete_Link']" sourceMapping="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Comment'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Constraint']" targetMapping="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_DurationObservation'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Lifeline'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_TimeObservation'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@containerMappings[name='COD_Interaction'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Constraint'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Comment']" targetFinderExpression="aql:if self.oclIsKindOf(uml::Constraint) then self.oclAsType(uml::Constraint).constrainedElement else (if self.oclIsKindOf(uml::Comment) then self.oclAsType(uml::Comment).annotatedElement else null endif) endif" reconnections="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='ReconnectLinkSource'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='ReconnectLinkTarget']">
          <style lineStyle="dot" targetArrow="NoDecoration">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="COD_Message" preconditionExpression="aql:self.oclIsTypeOf(uml::Message) and not(sourceView.isCompartmentView()) and not(targetView.isCompartmentView())" deletionDescription="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='COD_Delete_All']" labelDirectEdit="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.6/@ownedTools[name='NamedElement_name_EditionTool']" semanticCandidatesExpression="aql:self.oclAsType(uml::Interaction).message" sourceMapping="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Lifeline']" targetMapping="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Lifeline']" targetFinderExpression="aql:self.getTargets()" sourceFinderExpression="aql:self.getSource()" domainClass="uml::Message" useDomainElement="true" reconnections="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='ReconnectMessageSource'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='ReconnectMessageTarget']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="9" labelExpression="aql:self.renderLabel(diagram)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="COD_Interaction" preconditionExpression="aql:self.oclIsTypeOf(uml::Interaction) and containerView.oclIsKindOf(viewpoint::DRepresentation)" deletionDescription="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='COD_Delete_Interaction']" labelDirectEdit="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.6/@ownedTools[name='NamedElement_name_EditionTool']" semanticCandidatesExpression="aql:self" synchronizationLock="true" domainClass="uml::Interaction" dropDescriptions="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticMessageDrop']" childrenPresentation="VerticalStack">
          <subContainerMappings name="COD_InteractionContentCompartment" deletionDescription="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='COD_Delete_Interaction']" semanticCandidatesExpression="aql:self" synchronizationLock="true" domainClass="uml::Interaction" dropDescriptions="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticCommentDrop'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticConstraintDrop'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticLifelineDrop'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticDurationObservationDrop'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticTimeObservationDrop'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticTypeDrop'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@toolSections.4/@ownedTools[name='SemanticMessageDrop']" reusedNodeMappings="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Comment'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Constraint'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Lifeline'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_DurationObservation'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_TimeObservation']">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="15" arcHeight="15" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:'InteractionCompartment'" hideLabelByDefault="true" roundedCorner="true" widthComputationExpression="100" heightComputationExpression="50" foregroundColor="//@userColorsPalettes[name='COD_ColorPalette']/@entries[name='CustomBlue']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="15" arcHeight="15" borderSizeComputationExpression="1" labelSize="9" labelExpression="aql:self.renderLabel(diagram)" roundedCorner="true" foregroundColor="//@userColorsPalettes[name='COD_ColorPalette']/@entries[name='CustomBlue']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Nodes" icon="/org.eclipse.gmf.runtime.diagram.ui/icons/group.gif">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateLifelineTool" label="Lifeline" precondition="aql:not(containerView.oclIsKindOf(viewpoint::DRepresentation)) and container.canCreate(uml::Lifeline,'lifeline')" nodeMappings="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Lifeline']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createElement('uml::Lifeline','lifeline',containerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateCommentTool" label="Comment" precondition="aql:not(containerView.oclIsKindOf(viewpoint::DRepresentation)) and container.canCreate(uml::Comment,'ownedComment')" nodeMappings="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Comment']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createElement('uml::Comment','ownedComment',containerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateConstraintTool" label="Constraint" precondition="aql:not(containerView.oclIsKindOf(viewpoint::DRepresentation)) and container.canCreate(uml::Constraint,'ownedRule')" nodeMappings="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Constraint']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createElement('uml::Constraint','ownedRule',containerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateDurationObservationTool" label="Duration Observation" precondition="aql:not(containerView.oclIsKindOf(viewpoint::DRepresentation)) and container.canCreateObservationCOD(uml::DurationObservation,'packagedElement')" nodeMappings="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_DurationObservation']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createObservationCOD('uml::DurationObservation','packagedElement',containerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CreateTimeObservationTool" label="Time Observation" precondition="aql:not(containerView.oclIsKindOf(viewpoint::DRepresentation)) and container.canCreateObservationCOD(uml::TimeObservation,'packagedElement')" nodeMappings="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_TimeObservation']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createObservationCOD('uml::TimeObservation','packagedElement',containerView)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Edges" icon="/org.eclipse.gmf.runtime.diagram.ui/icons/group.gif">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="CreateMessageTool" label="Message" precondition="aql:preSource.canCreateDomainBasedEdge(preTarget,'Message','message',preSourceView,preTargetView)" edgeMappings="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@edgeMappings[name='COD_Message']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.createDomainBasedEdgeCOD(target,'Message','message',sourceView,targetView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="CreateLinkTool" label="Link" edgeMappings="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@edgeMappings[name='COD_Link']" iconPath="/org.eclipse.papyrus.sirius.uml.diagram.common/icons/obj16/Link.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.setLinkTarget(target, sourceView,'COD_Link')"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="DeleteAction">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="COD_Delete_All">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.delete()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="COD_Delete_Interaction" precondition="aql:false">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.delete()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="COD_Delete_Link">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.deleteLink(elementView)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Reconnect">
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectLinkSource" precondition="aql:self.canReconnectLinkSource(target)" forceRefresh="true" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.reconnectLinkSource(target,edgeView)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectLinkTarget" forceRefresh="true">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.reconnectLinkTarget(sourceView,source,target,'COD_Link')"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectMessageSource" precondition="aql:self.canReconnectSource(edgeView, source, target, targetView)" forceRefresh="true" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.reconnectSource(source,target,targetView)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectMessageTarget" precondition="aql:self.canReconnectTarget(edgeView, source, target, targetView)" forceRefresh="true">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.reconnectTarget(source,target,targetView)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
        <toolSections name="SemanticDrop">
          <ownedTools xsi:type="tool:ContainerDropDescription" name="SemanticCommentDrop" precondition="aql:self.oclIsTypeOf(uml::Comment) and self.canDragAndDropSemanticCD(newContainer)" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.dragAndDropSemanticCD(newContainerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="SemanticConstraintDrop" precondition="aql:self.oclIsTypeOf(uml::Constraint) and self.canDragAndDropSemanticCD(newContainer)" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.dragAndDropSemanticCD(newContainerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="SemanticDurationObservationDrop" precondition="aql:self.oclIsTypeOf(uml::DurationObservation) and self.canDragAndDropSemanticCD(newContainer)" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.dragAndDropSemanticCD(newContainerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="SemanticLifelineDrop" precondition="aql:self.oclIsTypeOf(uml::Lifeline) and self.canDragAndDropSemanticCD(newContainer)" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.dragAndDropSemanticCD(newContainerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="SemanticMessageDrop" precondition="aql:self.oclIsTypeOf(uml::Message)" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.dragAndDropSemanticCD(newContainerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="SemanticPropertyDrop" precondition="aql:self.oclIsKindOf(uml::Property) and self.canDragAndDropSemanticCD(newContainer)" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.dragAndDropSemanticCD(newContainerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="SemanticTimeObservationDrop" precondition="aql:self.oclIsTypeOf(uml::TimeObservation) and self.canDragAndDropSemanticCD(newContainer)" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.dragAndDropSemanticCD(newContainerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="SemanticTypeDrop" precondition="aql:self.oclIsKindOf(uml::Type) and self.canDragAndDropSemanticCD(newContainer)" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.dragAndDropSemanticCD(newContainerView)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="GraphicalDrop"/>
        <toolSections name="F2_Edition">
          <ownedTools xsi:type="tool:DirectEditLabel" name="Comment_body_EditionTool" precondition="aql:self.oclIsKindOf(uml::Comment)" inputLabelExpression="aql:self.oclAsType(uml::Element).getDirectEditInputValue()">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(uml::Element).consumeNewLabel(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="NamedElement_name_EditionTool" precondition="aql:self.oclIsKindOf(uml::NamedElement)" inputLabelExpression="aql:self.oclAsType(uml::Element).getDirectEditInputValue()">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(uml::Element).consumeNewLabel(arg0)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(uml::Classifier) and self.oclAsType(uml::Classifier).isAbstract">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@containerMappings[name='COD_Interaction']/@style" attributeName="labelFormat" value="aql:'italic'"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
      <additionalLayers name="QualifiedNameLayer" label="Display Qualified Name" reusedMappings="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Comment'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Constraint'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@containerMappings[name='COD_Interaction'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Lifeline'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_DurationObservation'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_TimeObservation'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@edgeMappings[name='COD_Message']"/>
      <additionalLayers name="AppliedStereotypeLayer" label="Display Applied Stereotypes" reusedMappings="//@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Comment'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Constraint'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@containerMappings[name='COD_Interaction'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_Lifeline'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_DurationObservation'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@nodeMappings[name='COD_TimeObservation'] //@ownedViewpoints[name='CommunicationDiagram']/@ownedRepresentations[name='CommunicationDiagram']/@defaultLayer/@edgeMappings[name='COD_Message']" activeByDefault="true"/>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.CommonDiagramServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.DeleteServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.DomainBasedEdgeServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.LinkRelationServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.ReconnectServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.SemanticCandidatesServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.common.services.UMLLabelServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.communication.services.CommunicationDiagramServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.papyrus.sirius.uml.diagram.communication.services.CommunicationDropBehaviorProvider"/>
  </ownedViewpoints>
  <userColorsPalettes name="COD_ColorPalette">
    <entries xsi:type="description:UserFixedColor" red="195" green="215" blue="221" name="CustomBlue"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="204" name="CommentColor"/>
    <entries xsi:type="description:UserFixedColor" red="200" green="255" blue="230" name="ConstraintColor"/>
  </userColorsPalettes>
</description:Group>
