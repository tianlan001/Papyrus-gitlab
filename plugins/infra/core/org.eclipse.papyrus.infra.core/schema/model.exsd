<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.papyrus.infra.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.papyrus.infra.core" id="org.eclipse.papyrus.infra.core.model" name="model"/>
      </appInfo>
      <documentation>
         A model represent a unit containing model elements.
A model can be registered and retrieved from the ModelSet.
This extension allows to register models to the ModelSet.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="model" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="modelSetSnippet" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="model">
      <annotation>
         <documentation>
            A model to be registered to the ModelSet.
Registered model can be retrieved from the ModelSet.
         </documentation>
      </annotation>
      <complexType>
         <choice minOccurs="0" maxOccurs="unbounded">
            <element ref="modelSnippet"/>
            <element ref="dependency"/>
         </choice>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  Human readable description for the model.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="classname" type="string" use="required">
            <annotation>
               <documentation>
                  The class implementing the model.
This is the class that wil be registered in the ModelSet.
The class will be registered using the key set in the Model.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.papyrus.infra.core.resource.IModel"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="fileExtension" type="string">
            <annotation>
               <documentation>
                  Indicates the resource URI file extension that the model keys on to correlate to resources in the model set.  Although this is optional, it is recommended to support the determination of whether a resource is one that may be loaded into the Papyrus editor.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="required" type="boolean">
            <annotation>
               <documentation>
                  Indication of whether the model&apos;s resources are required to be present and loaded in the resource set.  The default if not specified is &lt;tt&gt;false&lt;/tt&gt;.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="modelSnippet">
      <annotation>
         <documentation>
            A model snippet is a piece of code that is executed after the model is loaded.
A snippet allows to manipulate the model right after it is loaded. 
&lt;br&gt;
For example, it is possible to add listeners to the model.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  Human readable description for the model snippet.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="classname" type="string" use="required">
            <annotation>
               <documentation>
                  The class implementing the model snippet.
The code is executed right after the model is loaded.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.papyrus.infra.core.resource.IModelSnippet"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="modelSetSnippet">
      <annotation>
         <documentation>
            A modelSet snippet is a piece of code that is executed after the modelSet is loaded.
A snippet allows to do post operations after ModelSet is loaded.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  Human readable description for the modelSet snippet.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="classname" type="string" use="required">
            <annotation>
               <documentation>
                  The class implementing the modelSet snippet.
The code is executed right after the modelSet is loaded.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.papyrus.infra.core.resource.IModelSetSnippet"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="dependency">
      <complexType>
         <choice minOccurs="1" maxOccurs="unbounded">
            <element ref="loadAfter"/>
            <element ref="unloadBefore"/>
         </choice>
      </complexType>
   </element>

   <element name="loadAfter">
      <complexType>
         <attribute name="identifier" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="unloadBefore">
      <complexType>
         <attribute name="identifier" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         0.7.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         /*****************************************************************************
         * Copyright (c) 2010 CEA LIST.
         *
         *    
         * All rights reserved. This program and the accompanying materials
         * are made available under the terms of the Eclipse Public License 2.0
         * which accompanies this distribution, and is available at
         * https://www.eclipse.org/legal/epl-2.0/
         *
         * SPDX-License-Identifier: EPL-2.0
         *
         * Contributors:
         * CEA LIST - Initial API and implementation
         *
         *****************************************************************************/
      </documentation>
   </annotation>

</schema>
